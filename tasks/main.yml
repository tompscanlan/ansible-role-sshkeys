#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: Create .ssh directory on ansible host
  file: path="{{ new_priv_key | dirname }}" state=directory mode=0700
             owner="{{ sshkeys_user }}" group="{{ sshkeys_user }}"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Create .ssh directory on remote host
  file: path="~{{ ansible_ssh_user }}/.ssh" state=directory mode=0700
             owner="{{ sshkeys_remote_user }}" group="{{ sshkeys_remote_group }}"

- name: Assure known_hosts file exists to reduce superfluous logs
  copy: dest="{{ new_priv_key | dirname }}/known_hosts" content=''
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Remove previous failed run private key creations
  file: dest="{{ new_priv_key }}" state=absent
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost
  ignore_errors: True

- name: Remove previous failed run public keys
  file: dest="{{ new_pub_key }}" state=absent
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost
  ignore_errors: True

- name: Create new ssh key-pair
  command: ssh-keygen -t rsa -N "" -C "ansible" -q -f "{{ new_priv_key }}"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Set ownership of new private key to ansible user
  file: dest="{{ new_priv_key }}" state=file
              owner="{{ sshkeys_user }}" group="{{ sshkeys_user }}"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Set ownership of new public key to ansible user
  file: dest="{{ new_pub_key }}" state=file
              owner="{{ sshkeys_user }}" group="{{ sshkeys_user }}"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Add new key to authorized_keys file
  authorized_key: key="{{ lookup('file', new_pub_key) }}"
                  user="{{ sshkeys_remote_user }}"
                  state=present exclusive=yes

- name: Add new key to local authorized_keys file
  authorized_key: key="{{ lookup('file', new_pub_key) }}"
                  user="{{ sshkeys_user  }}" state=present
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Move new private key into place
  command: mv {{ new_priv_key }} "{{ new_priv_key | dirname }}/id_rsa"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

- name: Use the new key for future connects
  set_fact: ansible_private_ssh_key=new_priv_key

- name: Add new key to authorized_keys file
  authorized_key: key="{{ lookup('file', new_pub_key) }}"
                  user="{{ sshkeys_remote_user }}"
                  state=present exclusive=yes

- name: Move new public key into place
  command: mv {{ new_pub_key }} "{{ new_priv_key | dirname }}/id_rsa.pub"
  when: inventory_hostname == play_hosts[0]
  become: False
  delegate_to: localhost

